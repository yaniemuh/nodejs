docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    #- docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker info
    - echo $CI_API_KEY > /tmp/$CI_PIPELINE_ID.json
    - docker login -u $CI_REGISTRY_USER -p "$(cat /tmp/$CI_PIPELINE_ID.json)" https://$DOCKER_HOSTNAME
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    #- docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker build -f Dockerfile -t "$CI_REGISTRY_USER/$APP_ID${tag}" .
    - docker push "$CI_REGISTRY_USER/$APP_ID${tag}"
  # Run this job in a branch where a Dockerfile exists
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
